on:
  release:
    types: [published]

jobs:
  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      matrix:
        service: [spider, indexer, backlinks-processor, tfidf, page-rank]
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log into registry ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        working-directory: ./services/${{ matrix.service }}
        run: |
          docker build -t ghcr.io/$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')/${{ matrix.service }}:latest .

      - name: Push Docker image
        run: docker push ghcr.io/$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')/${{ matrix.service }}:latest

      - name: Upload docker-compose artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.service }}-docker-compose
          path: ./services/${{ matrix.service }}/docker-compose.yml

  # deploy:
  #   name: Copy docker-compose files to server
  #   runs-on: ubuntu-latest
  #   needs: build

  #   strategy:
  #     matrix:
  #       service: [spider, indexer, backlinks-processor, tfidf, page-rank, monitoring, client]
  #     fail-fast: false

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Create artifacts folder
  #       run: mkdir -p artifacts

  #     - name: Download ${{ matrix.service }} docker artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: ${{ matrix.service }}-docker-compose
  #         path: artifacts/${{ matrix.service }}

  #     - name: Debug artifacts
  #       run: ls -R artifacts

  #     - name: Copy artifacts to server
  #       uses: appleboy/scp-action@v0.1.7
  #       with:
  #         host: ${{ secrets.SSH_HOST }}
  #         username: ${{ secrets.SSH_USER }}
  #         key: ${{ secrets.SSH_PRIVATE_KEY }}
  #         port: ${{ secrets.SSH_PORT }}
  #         source: "artifacts/${{ matrix.service }}/*"
  #         target: "~/SearchEngine/${{ matrix.service | replace('-', '') | title }}"
