name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test-spider:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.0'
    - name: Build
      working-directory: ./services/spider
      run: go build -v ./cmd/spider/main.go
    - name: Test
      working-directory: ./services/spider
      run: go test -v ./...

  test-indexer:
    runs-on: ubuntu-latest
    steps:
    - name: Indexer Placeholder
      run: echo "Indexer Placeholder!"
  # Add unit-test for the other services once I have them
  # Add building of the rust tool

  build-and-push-docker-images:
    # needs: [test-spider, test-indexer]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    strategy:
      matrix:
        service: [spider, indexer]
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image for ${{ matrix.service }}
        working-directory: ./services/${{ matrix.service }}
        run: |
          docker build -t ${{ env.REGISTRY }}/$(echo "${{ env.IMAGE_NAME }}" | tr '[:upper:]' '[:lower:]')/${{ matrix.service }}:latest .

      - name: Push Docker image for ${{ matrix.service }}
        run: docker push ${{ env.REGISTRY }}/$(echo "${{ env.IMAGE_NAME }}" | tr '[:upper:]' '[:lower:]')/${{ matrix.service }}:latest

  upload-docker-compose-artifacts:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [spider, indexer]
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Upload ${{ matrix.service }} docker artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.service }}-docker-compose
          path: ./services/${{ matrix.service }}/docker-compose.yml

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
        uses: actions/checkout@v4
      - name: Prepare artifacts folder
        run: echo "Hello World!"
  #       run: |
  #         mkdir -p artifacts
  #         mkdir -p artifacts/spider
  #         mkdir -p artifacts/indexer
  #         ls
  #     - name: Download spider artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: spider-docker-compose
  #         path: artifacts/spider
  #     - name: Download indexer artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: indexer-docker-compose
  #         path: artifacts/indexer
  #     - name: Debug directories
  #       run: ls
  #     - name: Prepare server directories
  #       uses: appleboy/ssh-action@v1.2.2
  #       with:
  #         host: ${{ secrets.SSH_HOST }}
  #         username: ${{ secrets.SSH_USER }}
  #         key:  ${{ secrets.SSH_PRIVATE_KEY }}
  #         port: ${{ secrets.SSH_PORT }}
  #         script: |
  #           pwd
  #           ls -R
  #           mkdir -p ~/SearchEngine/Spider
  #           mkdir -p ~/SearchEngine/Indexer
  #           mkdir -p ~/SearchEngine/Monitoring
  #           ls -R
  #     - name: Copy artifacts to server
  #       uses: appleboy/scp-action@v0.1.7
  #       with:
  #         host: ${{ secrets.SSH_HOST }}
  #         username: ${{ secrets.SSH_USER }}
  #         key:  ${{ secrets.SSH_PRIVATE_KEY }}
  #         port: ${{ secrets.SSH_PORT }}
  #         source: "artifacts"
  #         target: ~/SearchEngine
